#: include active_mode.kv
#: include standby_mode.kv

<MonitorScreen>:
    canvas.before:
        Color:
            rgba: 0,0,0,.4
        Rectangle:
            size: self.size
            pos: self.pos
    MDBoxLayout:
        padding: 2
        spacing: 1
        MDBoxLayout:
            orientation: 'vertical'
            id: monitor_body

            StandbyMode:
                monitor_screen: root

        MDBoxLayout:
            orientation: 'vertical'
            padding: 2
            spacing: 2
            size_hint_x: .4
            MDCard:
                orientation: "vertical"
                padding: "8dp"
                pos_hint: {"center_x": .5, "center_y": .5}
                # focus_behavior: True
                theme_text_color:  "Custom"
                md_bg_color: 0.753,0.753,0.753,.4
                MDLabel:
                    text: "System Status"
                    theme_text_color: "Primary"
                    size_hint_y: None
                    font_style: 'H5'
                    height: self.texture_size[1]
                    halign: 'center'
                    valign: 'center'
                MDSeparator:
                    height: "1dp"
                MDBoxLayout:
                    padding: 8
                    MDLabel:
                        text: 'State: {}'.format('ON' if system_switch.active else 'OFF')
                        id: system_status_label
                        valign: 'middle'
                        halign: 'center'
                        theme_text_color: 'Custom'
                        text_color: 1,.6,1,1
                        font_style: 'H6'
                        
                    MDSwitch:
                        id: system_switch
                        pos_hint: {'center_x': .5, 'center_y': .5}
                        active: False
                        size_hint_x: .4
                        on_press: root.switch_view(switch=not self.active); print('System switched!')
            MDCard:
                orientation: "vertical"
                padding: "8dp"
                pos_hint: {"center_x": .5, "center_y": .5}
                # focus_behavior: True
                theme_text_color:  "Custom"
                md_bg_color: 0.753,0.753,0.753,.4
                MDLabel:
                    id: detected_object_label
                    text: "Detected objects"
                    theme_text_color: "Primary"
                    size_hint_y: None
                    font_style: 'H5'
                    height: self.texture_size[1]
                    halign: 'center'
                    valign: 'center'
                MDSeparator:
                    height: "1dp"
                MDLabel:
                    id: detected_object
                    text: 'None' if len(root.detected_objects) == 0 else ', '.join(root.detected_objects)
                    valign: 'middle'
                    halign: 'center'
                    theme_text_color: 'Custom'
                    text_color: 1,.6,1,1
                    font_style: 'H6'

            MDCard:
                orientation: "vertical"
                padding: "8dp"
                pos_hint: {"center_x": .5, "center_y": .5}
                # focus_behavior: True
                theme_text_color:  "Custom"
                md_bg_color: 0.753,0.753,0.753,.4
                MDLabel:
                    id: object_position_label
                    text: "Position of detected object"
                    theme_text_color: "Primary"
                    size_hint_y: None
                    height: self.texture_size[1]
                    font_style: 'H5'
                    halign: 'center'
                    valign: 'center'
                MDSeparator:
                    height: "1dp"
                MDLabel:
                    id: object_position
                    text: 'None' if len(root.position_of_detected_objects) == 0 else ', '.join(root.position_of_detected_objects)
                    valign: 'middle'
                    halign: 'center'
                    theme_text_color: 'Custom'
                    text_color: 1,.6,1,1
                    font_style: 'H6'
            MDCard:
                orientation: "vertical"
                padding: "8dp"
                pos_hint: {"center_x": .5, "center_y": .5}
                # focus_behavior: True
                theme_text_color:  "Custom"
                md_bg_color: 0.753,0.753,0.753,.4
                MDLabel:
                    id: no_of_object_label
                    text: "No. of detected objects"
                    theme_text_color: "Primary"
                    font_style: 'H5'
                    size_hint_y: None
                    height: self.texture_size[1]
                    halign: 'center'
                    valign: 'center'
                MDSeparator:
                    height: "1dp"
                MDLabel:
                    id: no_of_object
                    text: '{}'.format(root.number_of_detected_objects)
                    valign: 'middle'
                    halign: 'center'
                    theme_text_color: 'Custom'
                    text_color: 1,.6,1,1
                    font_style: 'H6'

            MDCard:
                orientation: "vertical"
                padding: "4dp"
                size_hint: 1, None
                height: "180dp"
                pos_hint: {"center_x": .5, "center_y": .5}
                # focus_behavior: True
                theme_text_color:  "Custom"
                md_bg_color: 0.753,0.753,0.753,.4
                MDBoxLayout:
                    size_hint_y: None
                    height: volume_control.texture_size[1]
                    MDIconButton:
                        icon: "volume-high"
                        pos_hint: {'center_y': .5}
                        size_hint_y: None
                        height: volume_control.texture_size[1]
                        on_press: self.icon = "volume-high" if self.icon == "volume-mute" else "volume-mute"; root.set_volume(disable=True)
                    MDLabel:
                        text: 'Volume Control'
                        id: volume_control
                        theme_text_color: "Primary"
                        text_color: 1,1,1,.5
                        font_style: 'H5'
                        size_hint_y: None
                        height: self.texture_size[1]
                        halign: 'center'
                        #valign: 'center'
                MDSeparator:
                    height: "1dp"
                MDBoxLayout:
                    orientation: 'vertical'
                    MDBoxLayout:
                        MDIconButton:
                            icon: "volume-minus"
                            pos_hint: {'center_x': .2, 'center_y': .5}
                            on_press: volume_controller.value = volume_controller.value - 5 if volume_controller.value >= 5 else 0; root.set_volume(volume_controller.value)
                            size_hint_x: .4

                        Slider:
                            id: volume_controller
                            min: 0
                            max: 100
                            value: 40
                            step: 5
                            pos_hint: {'center_x': .2}
                            on_touch_up: root.set_volume(self.value)

                        MDIconButton:
                            icon: "volume-plus"
                            pos_hint: {'center_x': .2, 'center_y': .5}
                            on_press: volume_controller.value =  volume_controller.value + 5 if volume_controller.value <= 95 else 100; root.set_volume(volume_controller.value)
                            size_hint_x: .4

                    MDLabel:
                        text: '{}%'.format(volume_controller.value)
                        valign: 'top'
                        halign: 'center'
                        size_hint_y: .9
                        theme_text_color: 'Custom'
                        text_color: 1,.6,1,1
                        font_style: 'H5'
